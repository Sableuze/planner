{"version":3,"sources":["webpack:///./src/views/TaskList.vue?f51b","webpack:///./src/views/TaskList.vue?36cb","webpack:///src/views/TaskList.vue","webpack:///./src/views/TaskList.vue?1598","webpack:///./src/views/TaskList.vue?1683"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","getTasks","fields","currentPage","perPage","filter","filterOn","sortBy","sortDesc","sortDirection","on","$event","onFiltered","scopedSlots","_u","key","fn","row","_s","index","item","id","_l","value","staticRenderFns","name","computed","$store","state","taskList","tasks","sortOptions","data","totalRows","pageOptions","infoModal","title","content","mounted","gsap","methods","info","JSON","stringify","$root","$emit","button","resetInfoModal","filteredItems","length","component"],"mappings":"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","file":"js/chunk-9b70dc54.8912179c.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskList.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"py-5 an-appear\"},[_c('h1',[_vm._v(\"List\")]),_c('hr'),_c('b-table',{attrs:{\"items\":_vm.getTasks,\"fields\":_vm.fields,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"filter-included-fields\":_vm.filterOn,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"stacked\":\"md\",\"show-empty\":\"\",\"small\":\"\",\"sort-icon-left\":\"\",\"label-align-sm\":\"left\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"cell(index)\",fn:function(row){return [_vm._v(\" \"+_vm._s(row.index + 1)+\" \")]}},{key:\"cell(actions)\",fn:function(row){return [_c('router-link',{staticClass:\"btn btn-success\",attrs:{\"tag\":\"button\",\"to\":'/task/' + row.item.id}},[_vm._v(\"Open \")])]}},{key:\"row-details\",fn:function(row){return [_c('b-card',[_c('ul',_vm._l((row.item),function(value,key){return _c('li',{key:key},[_vm._v(\" \"+_vm._s(key)+\": \"+_vm._s(value)+\" \")])}),0)])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"py-5 an-appear\">\n    <h1>List</h1>\n    <hr />\n    <b-table\n      :items=\"getTasks\"\n      :fields=\"fields\"\n      :current-page=\"currentPage\"\n      :per-page=\"perPage\"\n      :filter=\"filter\"\n      :filter-included-fields=\"filterOn\"\n      :sort-by.sync=\"sortBy\"\n      :sort-desc.sync=\"sortDesc\"\n      :sort-direction=\"sortDirection\"\n      stacked=\"md\"\n      show-empty\n      small\n      sort-icon-left\n      label-align-sm=\"left\"\n      @filtered=\"onFiltered\"\n    >\n      <template #cell(index)=\"row\">\n        {{ row.index + 1 }}\n      </template>\n\n      <template #cell(actions)=\"row\">\n        <router-link\n          tag=\"button\"\n          class=\"btn btn-success\"\n          :to=\"'/task/' + row.item.id\"\n          >Open\n        </router-link>\n      </template>\n\n      <template #row-details=\"row\">\n        <b-card>\n          <ul>\n            <li v-for=\"(value, key) in row.item\" :key=\"key\">\n              {{ key }}: {{ value }}\n            </li>\n          </ul>\n        </b-card>\n      </template>\n    </b-table>\n  </div>\n</template>\n\n<script>\nimport gsap from 'gsap'\nexport default {\n  name: 'TaskList',\n  computed: {\n    getTasks() {\n      return this.$store.state.taskList.tasks\n    },\n\n    sortOptions() {\n      // Create an options list from our fields\n      return this.fields\n        .filter((f) => f.sortable)\n        .map((f) => {\n          return {text: f.label, value: f.key}\n        })\n    },\n  },\n  data() {\n    return {\n      fields: [\n        {key: 'index', label: '#'},\n\n        {\n          key: 'date',\n          label: \"Task's date\",\n          sortable: true,\n        },\n        {\n          key: 'description',\n          label: \"Task's Description\",\n          sortable: false,\n          class: 'text d-none d-md-table-cell',\n        },\n        {key: 'status', label: 'Status', sortable: true},\n        {key: 'actions', label: 'Actions'},\n      ],\n      totalRows: 1,\n      currentPage: 1,\n      perPage: 5,\n      pageOptions: [5, 10, 15, {value: 100, text: 'Show a lot'}],\n      sortBy: '',\n      sortDesc: false,\n      sortDirection: 'asc',\n      filter: null,\n      filterOn: [],\n      infoModal: {\n        id: 'info-modal',\n        title: '',\n        content: '',\n      },\n    }\n  },\n\n  mounted() {\n    gsap.fromTo('.an-appear', {opacity: 0}, {opacity: 1, duration: 1})\n  },\n  methods: {\n    info(item, index, button) {\n      this.infoModal.title = `Row index: ${index}`\n      this.infoModal.content = JSON.stringify(item, null, 2)\n      this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n    resetInfoModal() {\n      this.infoModal.title = ''\n      this.infoModal.content = ''\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length\n      this.currentPage = 1\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.text {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 350px;\n}\ntable {\n  border-collapse: separate;\n  border-spacing: 0 1rem;\n}\n@media (max-width: 768px) {\n  .table.b-table.b-table-stacked-md > tbody > tr > [data-label]::before {\n    text-align: left;\n  }\n  .table.b-table.b-table-stacked-md > tbody > tr > [data-label] > div {\n    text-align: right;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaskList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TaskList.vue?vue&type=template&id=c826060e&\"\nimport script from \"./TaskList.vue?vue&type=script&lang=js&\"\nexport * from \"./TaskList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TaskList.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}